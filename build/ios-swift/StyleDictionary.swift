
//
// StyleDictionary.swift
//
// Do not edit directly
// Generated on Wed, 16 Jun 2021 17:40:19 GMT
//


import UIKit

public class StyleDictionary {
    public static let darkElevationShadow01Color = rgba(28, 27, 34, 0.5)
    public static let darkElevationShadow01OffsetX = 0
    public static let darkElevationShadow01OffsetY = 2
    public static let darkElevationShadow01Radius = 6
    public static let darkElevationShadow01Spread = 0
    public static let darkElevationShadow01Type = dropShadow
    public static let darkElevationShadow02Color = rgba(28, 27, 34, 0.5)
    public static let darkElevationShadow02OffsetX = 0
    public static let darkElevationShadow02OffsetY = 2
    public static let darkElevationShadow02Radius = 14
    public static let darkElevationShadow02Spread = 0
    public static let darkElevationShadow02Type = dropShadow
    public static let darkElevationShadow03Color = rgba(28, 27, 34, 0.5)
    public static let darkElevationShadow03OffsetX = 0
    public static let darkElevationShadow03OffsetY = 1
    public static let darkElevationShadow03Radius = 2
    public static let darkElevationShadow03Spread = 0
    public static let darkElevationShadow03Type = dropShadow
    public static let darkElevationShadowSwitchColor = rgba(58, 57, 68, 0.2)
    public static let darkElevationShadowSwitchOffsetX = 0
    public static let darkElevationShadowSwitchOffsetY = 0
    public static let darkElevationShadowSwitchRadius = 2
    public static let darkElevationShadowSwitchSpread = 0
    public static let darkElevationShadowSwitchType = dropShadow
    public static let desktopDarkBorderColorContextMenu = rgba(58, 57, 68, 1)
    public static let desktopDarkBorderColorPanel = rgba(82, 82, 94, 1)
    public static let desktopDarkBorderColorUiComponent = rgba(143, 143, 157, 1)
    public static let desktopDarkBorderColorZapGradientType = linear
    public static let desktopDarkBorderColorZapOpacity = 1
    public static let desktopDarkBorderColorZapStops0Color = rgba(144, 89, 255, 1)
    public static let desktopDarkBorderColorZapStops0Position = 0
    public static let desktopDarkBorderColorZapStops1Color = rgba(255, 74, 162, 1)
    public static let desktopDarkBorderColorZapStops1Position = 0.52
    public static let desktopDarkBorderColorZapStops2Color = rgba(255, 189, 79, 1)
    public static let desktopDarkBorderColorZapStops2Position = 1
    public static let desktopDarkButtonColorBackgroundError = rgba(226, 40, 80, 1)
    public static let desktopDarkButtonColorBackgroundErrorActive = rgba(129, 2, 32, 1)
    public static let desktopDarkButtonColorBackgroundErrorDisabled = rgba(226, 40, 80, 0.4)
    public static let desktopDarkButtonColorBackgroundErrorHover = rgba(197, 0, 66, 1)
    public static let desktopDarkButtonColorBackgroundPrimary = rgba(0, 221, 255, 1)
    public static let desktopDarkButtonColorBackgroundPrimaryActive = rgba(170, 242, 255, 1)
    public static let desktopDarkButtonColorBackgroundPrimaryDisabled = rgba(0, 221, 255, 0.4)
    public static let desktopDarkButtonColorBackgroundPrimaryHover = rgba(128, 235, 255, 1)
    public static let desktopDarkButtonColorBackgroundSecondary = rgba(43, 42, 51, 1)
    public static let desktopDarkButtonColorBackgroundSecondaryActive = rgba(91, 91, 102, 1)
    public static let desktopDarkButtonColorBackgroundSecondaryDisabled = rgba(43, 42, 51, 0.4)
    public static let desktopDarkButtonColorBackgroundSecondaryHover = rgba(82, 82, 94, 1)
    public static let desktopDarkIconColorCritical = rgba(255, 154, 162, 1)
    public static let desktopDarkIconColorDefault = rgba(251, 251, 254, 1)
    public static let desktopDarkIconColorEtpShieldGradientType = linear
    public static let desktopDarkIconColorEtpShieldOpacity = 1
    public static let desktopDarkIconColorEtpShieldStops0Color = rgba(203, 158, 255, 1)
    public static let desktopDarkIconColorEtpShieldStops0Position = 0
    public static let desktopDarkIconColorEtpShieldStops1Color = rgba(0, 221, 255, 1)
    public static let desktopDarkIconColorEtpShieldStops1Position = 1
    public static let desktopDarkIconColorInformation = rgba(128, 235, 255, 1)
    public static let desktopDarkIconColorSuccess = rgba(84, 255, 189, 1)
    public static let desktopDarkIconColorWarning = rgba(255, 189, 79, 1)
    public static let desktopDarkLayerColorLayer1 = rgba(28, 27, 34, 1)
    public static let desktopDarkLayerColorLayer2 = rgba(43, 42, 51, 1)
    public static let desktopDarkLayerColorLayer3 = rgba(66, 65, 77, 1)
    public static let desktopDarkLayerColorScrim = rgba(91, 91, 102, 0.45)
    public static let desktopDarkTextColorDisabled = rgba(251, 251, 254, 0.4)
    public static let desktopDarkTextColorError = rgba(255, 154, 162, 1)
    public static let desktopDarkTextColorInverted = rgba(21, 20, 26, 1)
    public static let desktopDarkTextColorLink = rgba(0, 221, 255, 1)
    public static let desktopDarkTextColorPrimary = rgba(251, 251, 254, 1)
    public static let desktopDarkTextColorSecondary = rgba(207, 207, 216, 1)
    public static let desktopLightBorderColorContextMenu = rgba(207, 207, 216, 1)
    public static let desktopLightBorderColorModal = rgba(240, 240, 244, 1)
    public static let desktopLightBorderColorPanel = rgba(240, 240, 244, 1)
    public static let desktopLightBorderColorUiComponent = rgba(143, 143, 157, 1)
    public static let desktopLightBorderColorZapGradientType = linear
    public static let desktopLightBorderColorZapOpacity = 1
    public static let desktopLightBorderColorZapStops0Color = rgba(144, 89, 255, 1)
    public static let desktopLightBorderColorZapStops0Position = 0
    public static let desktopLightBorderColorZapStops1Color = rgba(255, 74, 162, 1)
    public static let desktopLightBorderColorZapStops1Position = 0.52
    public static let desktopLightBorderColorZapStops2Color = rgba(255, 189, 79, 1)
    public static let desktopLightBorderColorZapStops2Position = 1
    public static let desktopLightButtonColorBackgroundError = rgba(226, 40, 80, 1)
    public static let desktopLightButtonColorBackgroundErrorActive = rgba(129, 2, 32, 1)
    public static let desktopLightButtonColorBackgroundErrorDisabled = rgba(226, 40, 80, 0.4)
    public static let desktopLightButtonColorBackgroundErrorHover = rgba(197, 0, 66, 1)
    public static let desktopLightButtonColorBackgroundPrimary = rgba(0, 96, 223, 1)
    public static let desktopLightButtonColorBackgroundPrimaryActive = rgba(5, 64, 150, 1)
    public static let desktopLightButtonColorBackgroundPrimaryDisabled = rgba(0, 96, 223, 0.4)
    public static let desktopLightButtonColorBackgroundPrimaryHover = rgba(2, 80, 187, 1)
    public static let desktopLightButtonColorBackgroundSecondary = rgba(240, 240, 244, 1)
    public static let desktopLightButtonColorBackgroundSecondaryActive = rgba(207, 207, 216, 1)
    public static let desktopLightButtonColorBackgroundSecondaryDisabled = rgba(240, 240, 244, 0.4)
    public static let desktopLightButtonColorBackgroundSecondaryHover = rgba(224, 224, 230, 1)
    public static let desktopLightIconColorCritical = rgba(226, 40, 80, 1)
    public static let desktopLightIconColorDefault = rgba(91, 91, 102, 1)
    public static let desktopLightIconColorEtpGradientType = linear
    public static let desktopLightIconColorEtpOpacity = 1
    public static let desktopLightIconColorEtpStops0Color = rgba(144, 89, 255, 1)
    public static let desktopLightIconColorEtpStops0Position = 0
    public static let desktopLightIconColorEtpStops1Color = rgba(2, 80, 187, 1)
    public static let desktopLightIconColorEtpStops1Position = 1
    public static let desktopLightIconColorInformation = rgba(0, 144, 237, 1)
    public static let desktopLightIconColorSuccess = rgba(42, 195, 162, 1)
    public static let desktopLightIconColorWarning = rgba(255, 164, 54, 1)
    public static let desktopLightLayerColor100 = rgba(240, 240, 244, 1)
    public static let desktopLightLayerColor200 = rgba(249, 249, 251, 1)
    public static let desktopLightLayerColor300 = rgba(255, 255, 255, 1)
    public static let desktopLightLayerColorScrim = rgba(91, 91, 102, 0.45)
    public static let desktopLightTextColorDisabled = rgba(21, 20, 26, 0.4)
    public static let desktopLightTextColorError = rgba(197, 0, 66, 1)
    public static let desktopLightTextColorInverted = rgba(251, 251, 254, 1)
    public static let desktopLightTextColorLink = rgba(0, 96, 223, 1)
    public static let desktopLightTextColorPrimary = rgba(21, 20, 26, 1)
    public static let desktopLightTextColorSecondary = rgba(91, 91, 102, 1)
    public static let lightElevationShadow01Color = rgba(58, 57, 68, 0.2)
    public static let lightElevationShadow01OffsetX = 0
    public static let lightElevationShadow01OffsetY = 2
    public static let lightElevationShadow01Radius = 6
    public static let lightElevationShadow01Spread = 0
    public static let lightElevationShadow01Type = dropShadow
    public static let lightElevationShadow02Color = rgba(58, 57, 68, 0.2)
    public static let lightElevationShadow02OffsetX = 0
    public static let lightElevationShadow02OffsetY = 2
    public static let lightElevationShadow02Radius = 14
    public static let lightElevationShadow02Spread = 0
    public static let lightElevationShadow02Type = dropShadow
    public static let lightElevationShadow03Color = rgba(58, 57, 68, 0.2)
    public static let lightElevationShadow03OffsetX = 0
    public static let lightElevationShadow03OffsetY = 1
    public static let lightElevationShadow03Radius = 2
    public static let lightElevationShadow03Spread = 0
    public static let lightElevationShadow03Type = dropShadow
    public static let lightElevationShadowSwitchColor = rgba(58, 57, 68, 0.2)
    public static let lightElevationShadowSwitchOffsetX = 0
    public static let lightElevationShadowSwitchOffsetY = 0
    public static let lightElevationShadowSwitchRadius = 2
    public static let lightElevationShadowSwitchSpread = 0
    public static let lightElevationShadowSwitchType = dropShadow
    public static let lightElevationShadowTab0Color = rgba(128, 128, 142, 0.5)
    public static let lightElevationShadowTab0OffsetX = 0
    public static let lightElevationShadowTab0OffsetY = 0
    public static let lightElevationShadowTab0Radius = 4
    public static let lightElevationShadowTab0Spread = 0
    public static let lightElevationShadowTab0Type = dropShadow
    public static let lightElevationShadowTab1Color = rgba(128, 128, 142, 0.9)
    public static let lightElevationShadowTab1OffsetX = 0
    public static let lightElevationShadowTab1OffsetY = 0
    public static let lightElevationShadowTab1Radius = 1
    public static let lightElevationShadowTab1Spread = 0
    public static let lightElevationShadowTab1Type = dropShadow
}
